{"version":3,"sources":["redux/operations.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","components/Conteiner/Conteiner.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["fetchContacts","createAsyncThunk","a","axios","get","result","data","postContact","id","name","number","post","then","responsive","catch","error","deleteContacts","delete","console","log","filterContacts","createAction","Form","addContacts","useState","setName","setNumber","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","className","htmlFor","type","onChange","pattern","title","Filter","ContactsList","users","ondeleteContact","map","onClick","Conteiner","children","App","contacts","useSelector","state","filter","dispatch","useDispatch","useEffect","normalizedFilter","toLocaleLowerCase","visibleContacts","contact","includes","some","alert","length","event","eventId","createReducer","fulfilled","_","action","payload","element","meta","arg","combineReducers","store","configureStore","reducer","contactsReduser","middleware","getDefaultMiddleware","concat","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebd82c5b.chunk.js","sourcesContent":["import { createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\n\nimport axios from \"axios\";\n\nconst fetchContacts = createAsyncThunk(\"fetchContacts\", async () => {\n  const result = await axios.get(\"http://localhost:3000/contacts\");\n  // console.log(\"result\", result);\n  return result.data;\n});\n\nconst postContact = createAsyncThunk(\n  \"postContact\",\n  async ({ id, name, number }) => {\n    const result = await axios\n      .post(\"http://localhost:3000/contacts\", {\n        id,\n        name,\n        number,\n      })\n      .then((responsive) => responsive)\n      .catch((error) => error);\n    // console.log(\"result\", result);\n    return result.data;\n  }\n);\n\nconst deleteContacts = createAsyncThunk(\"deleteContacts\", async (id) => {\n  const result = await axios\n    .delete(`http://localhost:3000/contacts/${id}`)\n    .then((responsive) => responsive)\n    .catch((error) => error);\n  console.log(\"result\", result);\n  return result.data;\n});\n\nconst filterContacts = createAction(\"filterContacts\");\n\nexport { fetchContacts, postContact, deleteContacts, filterContacts };\n","import { useState } from \"react\";\nimport \"./Form.css\";\nimport shortid from \"shortid\";\n\nfunction Form({ addContacts }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addContacts({ name, number });\n    reset();\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    if (name === \"name\") {\n      setName(value);\n    }\n    if (name === \"number\") {\n      setNumber(value);\n    }\n  };\n\n  const reset = (e) => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <label htmlFor={nameInputId} className=\"form__label\">\n        Name\n      </label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        className=\"form__input\"\n        id={nameInputId}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer и т. п.\"\n      ></input>\n      <label htmlFor={numberInputId} className=\"form__label\">\n        Number\n      </label>\n      <input\n        type=\"phone\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        className=\"form__input\"\n        id={numberInputId}\n        pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n        title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n      ></input>\n      <button type=\"submit\" className=\"form__button\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\nimport \"./Filter.css\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <label>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          className=\"filter__input\"\n        ></input>\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport \"./ContactList.css\";\n\nconst ContactsList = ({ users, ondeleteContact }) => (\n  <ul className=\"contactList__list\">\n    {users.map(({ id, name, number }) => (\n      <li key={id} className=\"contactList__item\">\n        <span className=\"contactList__text\">{name}</span>\n        <span className=\"contactList__text\">{number}</span>\n        <button\n          className=\"contactList__button\"\n          onClick={() => ondeleteContact(id)}\n        >\n          Delete contact\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactsList;\n","import React from \"react\";\nimport \"./Conteiner.css\";\nimport PropTypes from \"prop-types\";\n\nconst Conteiner = ({ title, children }) => {\n  return (\n    <div className=\"conteiner\">\n      <h2 className=\"conteiner__title\">{title}</h2>\n      <div>{children}</div>\n    </div>\n  );\n};\n\nConteiner.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n};\n\nexport default Conteiner;\n","import \"./App.css\";\nimport React from \"react\";\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  fetchContacts,\n  postContact,\n  deleteContacts,\n  filterContacts,\n} from \"./redux/operations\";\n\nimport Form from \"./components/Form/Form\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport Conteiner from \"./components/Conteiner/Conteiner\";\nimport shortid from \"shortid\";\n\nfunction App() {\n  const contacts = useSelector((state) => state.contacts.contacts);\n  const filter = useSelector((state) => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const addContacts = (data) => {\n    const contact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n    console.log(contact);\n\n    const inIsContact = (e) => {\n      return contact.name === e.name;\n    };\n    if (data.name === \"\" || data.number === \"\") {\n      alert(\"Please make a correct contact\");\n      return;\n    }\n    if (contacts.some(inIsContact)) {\n      alert(`${data.name} is already in contacts`);\n    } else dispatch(postContact(contact));\n  };\n\n  const deleteContact = (eventId) => {\n    dispatch(deleteContacts(eventId));\n  };\n\n  const changeFilter = (event) => {\n    dispatch(filterContacts(event.currentTarget.value));\n  };\n\n  const normalizedFilter = filter.toLocaleLowerCase();\n\n  const visibleContacts = contacts.filter(\n    (contact) =>\n      contact.name.includes(normalizedFilter) ||\n      contact.number.includes(normalizedFilter)\n  );\n\n  return (\n    <>\n      <Conteiner title=\"Phonebook\">\n        <Form addContacts={addContacts} />\n      </Conteiner>\n      <Conteiner title=\"Contacts\">\n        {contacts.length > 0 ? (\n          <>\n            <Filter value={filter} onChange={changeFilter} />\n            <ContactsList\n              users={visibleContacts}\n              ondeleteContact={deleteContact}\n            />\n          </>\n        ) : (\n          <span className=\"contact-message\">\n            You have not contacts yet, please add contact to phoneboock\n          </span>\n        )}\n      </Conteiner>\n    </>\n  );\n}\n\nexport default App;\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\n\nimport {\n  fetchContacts,\n  postContact,\n  deleteContacts,\n  filterContacts,\n} from \"./operations\";\n\nconst contacts = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [postContact.fulfilled]: (state, action) => [...state, action.payload],\n\n  [deleteContacts.fulfilled]: (state, action) =>\n    state.filter((element) => element.id !== action.meta.arg),\n});\n\nconst filter = createReducer(\"\", {\n  [filterContacts]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n\n// import { addContact, deleteContact, filterContact } from \"./actions\";\n\n// const contacts = createReducer([], {\n//   [addContact]: (state, action) => [...state, action.payload],\n//   [deleteContact]: (state, action) =>\n//     state.filter((element) => element.id !== action.payload),\n// });\n\n// const filter = createReducer(\"\", {\n//   [filterContact]: (state, action) => action.payload,\n// });\n\n// export default combineReducers({\n//   contacts,\n//   filter,\n// });\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport contactsReduser from \"./reducer\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReduser,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n});\n\nexport { store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}